[build-system]
requires = ["setuptools>=40.8.0", "wheel", "oldest-supported-numpy", "scipy>=0.13.2"]
build-backend = "setuptools.build_meta"

[tool.cibuildwheel]
build = "cp38-*"
skip = "*-win32 *-manylinux_i686 *-musllinux_*"
test-requires = ["pytest", "git+git://github.com/osqp/osqp-python.git@vb/pybind11"]
test-command = "OSQP_ALGEBRA=cuda python -c \"from osqp import default_algebra; assert(default_algebra()=='cuda')\""

[tool.cibuildwheel.linux]
environment = { OSQP_ALGEBRA="cuda", CMAKE_CUDA_COMPILER="/usr/local/cuda/bin/nvcc", CUDA_TOOLKIT_ROOT_DIR="/usr/local/cuda" }
before-all = ".github/workflows/prepare_build_environment_linux_cuda.sh"
repair-wheel-command = ""

[tool.cibuildwheel.windows]
environment = { OSQP_ALGEBRA="cuda", CMAKE_CUDA_COMPILER="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.2/bin/nvcc.exe", CUDA_TOOLKIT_ROOT_DIR="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.2", CUDA_PATH="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.2", CUDACXX="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.2/bin/nvcc.exe", CudaToolkitDir="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.2" }
before-all = "bash .github/workflows/prepare_build_environment_windows_cuda.sh"
repair-wheel-command = ""
test-command = "bash -c \"OSQP_ALGEBRA=cuda python -c 'from osqp import default_algebra; assert(default_algebra()==\"cuda\")'\""
